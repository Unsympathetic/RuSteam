<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAY5JREFUSEvV
        VoFRxCAQpARL+I5MR1qCHZgOTAd+A5p0ku9Ad5kLCfxxwD+OujM7SWDvloGD4P4FZucG8OnDubdP595J
        vrMNfBRZHyDhCclfYbKCXwWu1DJGwm8DkrwoyavIWZA09UDQA4LnNNkNnJlL0troaLqxzhzCJQnsQXgb
        uGdNS0TuZ7GJgSGdtICepIfY7UDHmAoPvIDnpE0jNdRqfeQodjvQaAX4NcLTGpxPiqdVIys1Acg6KKKI
        PBioxbtmvplaA/OkF7UeXHhNlDJjXm1KRkWGhikV5JiYN5kKJ8Z44KOmcAI3cwLfLabkWULbjcFQnXxP
        +kqMjKunGgzTm1nzEvep5oIrAo1Xa9pqTi/qPWq2E5gtpBbzaDsRaLQOkEU02cQHc+sAuVATAY3WaHn7
        4FVH6zuSGuumEooyAFPwOz8JoqHImhkVlQaIfuIi4GvEBKaDV5+e5gtzSnobHc3rTY+4Z82La1oCKxGJ
        uNWsfb6RmpExEt4HSDjILPBs54+FnNjGPpH9ZTj3DWjuGpR7JCMdAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAc1JREFUSEvV
        l4tRwzAQRFUCJaQUOiAl0Al0AB2QDqCDuAGIO3E6CPvMmsiWbMtOZgI7czO5092u/lbCv8AhhK3s6TOE
        968Q9hi/ickenHYdiHAj8jeJNLKj7EP+c2zE3NaQS43L10EkryI7ySqR3Ts8CuVsyaVGv18cLoeK7lR8
        kNUlgkNQQy0ccDk8jUiUUZYVZWAeRl8mrkR6Wtm9GJ243Ty8pkzv6pEO4ZHXbEKH+lDCRglsisVrOgc4
        zZ3udjXsZNkpptclHVIO5zw7W3CjYfcMBY9j5MTVTo8fHUpAm3PGODhqjd0fOHi0m0VEnIhPtcVAAy27
        7aZqbx+7o8gJlIoCNHqbLAlMIBZaIgqSAcqpSoVBJ7hEFFj4vIFvKXybqU4CI8gJLRFHozdAFaVnbIAp
        gVJx5fSPE8gGDcWvdYGkd4WCXJl7uz2oiCsz26kY5JBrtwdx569MFdzmIwG08HwWy18NBYALztlToyQe
        AtkpXwNxMcW13XG4h634JSM3D0/g8odFJM60L15zaqhdJBrDFwtXI6OffbArhyPDKE+zazoHkbHbOWrd
        g7375/BrxGhzzo4al18HItx6FvjnwKbB2muQNqf9ZYTwDfJ5QspXBhebAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>